/*************************************************************************
* Config file for defining DSL2 per module options and publishing paths
*
* Available keys to override module options:
*       ext.args   = Additional arguments appended to command in module
*
*
* For the structure, we took inspiration from the nf-core project.
**************************************************************************/

process {
    
    withName: 'TX2GENE' {
        ext.args   = ''
        publishDir = [
            path: {"${params.outdir}/ref/${params.species}/"},
            mode: params.publishdir_mode,
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTQC' {
        ext.args   = ''
        publishDir = [
            path: {"${params.outdir}/fastqc"},
            mode: params.publishdir_mode,
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUTADAPT' {
        ext.args   = ''
        publishDir = [
            path: {"${params.outdir}/cutadapt"},
            mode: params.publishdir_mode,
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTQC_CUTADAPT' {
        ext.args   = ''
        publishDir = [
            path: {"${params.outdir}/fastqc_cutadapt"},
            mode: params.publishdir_mode,
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'CREATE_DECOYS_FILE' {
        publishDir = [
            path: { "${params.outdir}/salmon/index/${params.species}" },
            mode: params.publishdir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            overwrite: true
        ]
    }

    withName: 'SALMON_INDEX' {
        ext.args   = [
            '-k 31',
            params.gencode ? '--gencode' : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/salmon/index/${params.species}" },
            mode: params.publishdir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            //enabled: params.save_reference
        ]
    }

    withName: 'SALMON_QUANT' {
        //--gcBias is suggested here https://www.bioconductor.org/packages/devel/workflows/vignettes/rnaseqGene/inst/doc/rnaseqGene.html#preparing-quantification-input-to-deseq2
        ext.args   = '--seqBias --gcBias'
        publishDir = [
            path: { "${params.outdir}/salmon/quant" },
            mode: params.publishdir_mode,
            overwrite: true,
            //saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('_meta_info.json') ? null : filename }
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TXIMPORT_SALMON' {
        publishDir = [
            path: {"${params.outdir}/salmon/tximport"},
            mode: params.publishdir_mode,
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SOFTWARE_VERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publishdir_mode,
            pattern: '*versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = ''
        publishDir = [
            path: { [
                "${params.outdir}/multiqc",
                ''
                ].join('') },
            mode: params.publishdir_mode
            //saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
